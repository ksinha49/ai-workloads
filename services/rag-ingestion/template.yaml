AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambdas for RAG ingestion.

Parameters:
  BucketName:
    Type: String
  TextDocPrefix:
    Type: String
    Default: text-docs/
  MilvusInsertFunctionArn:
    Type: String
  MilvusDeleteFunctionArn:
    Type: String
  MilvusUpdateFunctionArn:
    Type: String
  MilvusCreateCollectionFunctionArn:
    Type: String
  MilvusDropCollectionFunctionArn:
    Type: String

Globals:
  Function:
    Handler: app.lambda_handler
    Runtime: python3.13
    Timeout: 60
    MemorySize: 512

Resources:
  TextChunkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./text-chunk-lambda/

  EmbedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./embed-lambda/


  IngestionStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        Comment: Sequential ingestion workflow
        StartAt: TextChunk
        States:
          TextChunk:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Output: '{% $states.result.Payload %}'
            Arguments:
              FunctionName: !GetAtt TextChunkFunction.Arn
              Payload: '{% $states.input %}'
            Next: Embed
          Embed:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Output: '{% $states.result.Payload %}'
            Arguments:
              FunctionName: !GetAtt EmbedFunction.Arn
              Payload: '{% $states.input %}'
            Next: MilvusInsert
          MilvusInsert:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Output: '{% $states.result.Payload %}'
            Arguments:
              FunctionName: !Ref MilvusInsertFunctionArn
              Payload: '{% $states.input %}'
            End: true
        QueryLanguage: JSONata
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TextChunkFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref EmbedFunction
      Events:
        NewTextDoc:
          Type: S3
          Properties:
            Bucket: !Ref BucketName
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: !Ref TextDocPrefix

Outputs:
  TextChunkFunctionArn:
    Description: ARN of the text chunk Lambda
    Value: !GetAtt TextChunkFunction.Arn
  EmbedFunctionArn:
    Description: ARN of the embed Lambda
    Value: !GetAtt EmbedFunction.Arn
  IngestionStateMachineArn:
    Description: ARN of the ingestion Step Function
    Value: !Ref IngestionStateMachine
