AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Summarization workflow invoking the file ingestion service.

Globals:
  Function:
    Timeout: 3
    Tracing: Active
    Runtime: python3.13
    Architectures:
      - x86_64
    LoggingConfig:
      LogFormat: JSON

Parameters:
  AWSAccountName:
    Type: String
    Description: AWS Account Name

  LambdaSubnet1ID:
    Type: String
    Description: Subnet ID for Lambda function

  LambdaSubnet2ID:
    Type: String
    Description: Subnet ID for Lambda function

  LambdaSecurityGroupID1:
    Type: String
    Description: Security Group ID for Lambda functions
  LambdaSecurityGroupID2:
    Type: String
    Description: Security Group ID for Lambda functions
  LambdaIAMRoleARN:
    Type: String
    Description: IAM Role ARN for Lambda functions

  FileProcessingStepFunctionIAMRole:
    Type: String
    Description: IAM role ARN for step functions

  FileIngestionStateMachineArn:
    Type: String
    Description: ARN of the file ingestion Step Function

  RagSummaryFunctionArn:
    Type: String
    Description: ARN of the RAG retrieval summary Lambda

  FileAssembleFunctionArn:
    Type: String
    Description: ARN of the file assemble Lambda

  RunPromptsConcurrency:
    Type: Number
    Default: 10
    Description: MaxConcurrency for the run_prompts map state

  StatusPollSeconds:
    Type: Number
    Default: 200
    Description: Delay between polling for file processing status

Resources:
  SummaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300

  FileSummaryLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub '${AWSAccountName}-${AWS::StackName}-file-summary-layer'
      Description: Layer for file summary Lambda
      ContentUri: ../../common/layers/file-summary-lambda-layer/
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - python3.13

  FileSummaryLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWSAccountName}-${AWS::StackName}-file-summary'
      Handler: app.lambda_handler
      Runtime: python3.13
      CodeUri: ./file-summary-lambda/
      Role: !Ref LambdaIAMRoleARN
      MemorySize: 1024
      Timeout: 720
      EphemeralStorage:
        Size: 2068
      Layers:
        - !Ref FileSummaryLambdaLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroupID1
          - !Ref LambdaSecurityGroupID2
        SubnetIds:
          - !Ref LambdaSubnet1ID
          - !Ref LambdaSubnet2ID
      Environment:
        Variables:
          AWS_ACCOUNT_NAME: !Ref AWSAccountName
          RAG_SUMMARY_FUNCTION_ARN: !Ref RagSummaryFunctionArn

  SummarizeWorkerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWSAccountName}-${AWS::StackName}-summarize-worker'
      Handler: app.lambda_handler
      Runtime: python3.13
      CodeUri: ./summarize-worker-lambda/
      Role: !Ref LambdaIAMRoleARN
      MemorySize: 512
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroupID1
          - !Ref LambdaSecurityGroupID2
        SubnetIds:
          - !Ref LambdaSubnet1ID
          - !Ref LambdaSubnet2ID
      Environment:
        Variables:
          RAG_SUMMARY_FUNCTION_ARN: !Ref RagSummaryFunctionArn
      Events:
        Queue:
          Type: SQS
          Properties:
            Queue: !GetAtt SummaryQueue.Arn
            BatchSize: 1

  WorkerSQSPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${AWSAccountName}-${AWS::StackName}-worker-sqs'
      Roles:
        - !Select [1, !Split ['/', !Ref LambdaIAMRoleARN]]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt SummaryQueue.Arn

  WorkerSFCallbackPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${AWSAccountName}-${AWS::StackName}-worker-callback'
      Roles:
        - !Select [1, !Split ['/', !Ref LambdaIAMRoleARN]]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - states:SendTaskSuccess
              - states:SendTaskFailure
            Resource: !Ref FileProcessingStepFunction

  FileIngestionSFInvokePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${AWSAccountName}-${AWS::StackName}-file-ingestion-sf-invoke'
      Roles:
        - !Select [1, !Split ['/', !Ref FileProcessingStepFunctionIAMRole]]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - states:StartExecution
            Resource: !Ref FileIngestionStateMachineArn

  StepFunctionSQSPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${AWSAccountName}-${AWS::StackName}-sf-sqs-send'
      Roles:
        - !Select [1, !Split ['/', !Ref FileProcessingStepFunctionIAMRole]]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt SummaryQueue.Arn

  FileProcessingStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        Comment: Orchestrate file ingestion and summarization
        StartAt: file_ingestion
        States:
          file_ingestion:
            Type: Task
            Resource: arn:aws:states:::states:startExecution.sync
            Output: '{% $states.input %}'
            Parameters:
              StateMachineArn: !Ref FileIngestionStateMachineArn
              Input: '{% $states.input %}'
            Next: run_prompts
          run_prompts:
            Type: Map
            ItemsPath: $.body.prompts
            ResultPath: $.run_prompts
            MaxConcurrency: !Ref RunPromptsConcurrency
            Iterator:
              StartAt: summarize
              States:
                summarize:
                  Type: Task
                  Resource: arn:aws:states:::sqs:sendMessage.waitForTaskToken
                  Parameters:
                    QueueUrl: !Ref SummaryQueue
                    MessageBody:
                      token.$: $$.Task.Token
                      query.$: $$Map.Item.Value.query
                      Title.$: $$Map.Item.Value.Title
                      retrieve_params.$: $states.input.body.retrieve_params
                      router_params.$: $states.input.body.router_params
                      llm_params.$: $states.input.body.llm_params
                      collection_name.$: $states.input.body.collection_name
                  Next: add_title
                add_title:
                  Type: Pass
                  Parameters:
                    Title.$: $.Title
                    content.$: $.summary
                  End: true
            Next: file_summary
          file_summary:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Output: '{% $states.result.Payload %}'
            Arguments:
              FunctionName: !GetAtt FileSummaryLambdaFunction.Arn
              Payload: '{% $merge([$states.input, {"summaries": $.run_prompts, "collection_name": $states.input.body.collection_name}]) %}'
            Retry:
              - ErrorEquals:
                  - States.TaskFailed
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
                JitterStrategy: FULL
            Next: file_assemble
          file_assemble:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Output: '{% $states.result.Payload %}'
            Arguments:
              FunctionName: !Ref FileAssembleFunctionArn
              Payload: '{% $states.input %}'
            Retry:
              - ErrorEquals:
                  - States.TaskFailed
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
                JitterStrategy: FULL
            End: true
        QueryLanguage: JSONata
      Name: !Sub '${AWSAccountName}-${AWS::StackName}-file-processing-sf'
      Type: STANDARD
      Role: !Ref FileProcessingStepFunctionIAMRole
      Logging:
        Level: 'OFF'
        IncludeExecutionData: false

Outputs:
  FileProcessingStepFunctionArn:
    Description: ARN of the file processing state machine
    Value: !Ref FileProcessingStepFunction
  SummaryQueueUrl:
    Description: URL of the summarization queue
    Value: !Ref SummaryQueue
