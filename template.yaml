AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Parent SAM template that includes individual service stacks.

Parameters:
  MilvusHost:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /rag/milvus/host
  MilvusPort:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /rag/milvus/port
  MilvusCollection:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /rag/milvus/collection
  ElasticsearchUrl:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /rag/elasticsearch/url
  ElasticsearchIndexPrefix:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /rag/elasticsearch/index
  BedrockOpenAIEndpoint:
    Type: String
    Default: ''
  BedrockApiKey:
    Type: String
    Default: ''
  OllamaEndpoint:
    Type: String
    Default: ''
  OllamaDefaultModel:
    Type: String
    Default: ''
  PromptComplexityThreshold:
    Type: String
    Default: '20'
  ClassifierModelId:
    Type: String
    Default: ''

Resources:
  IDPService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/idp/template.yaml
      Parameters:
        DocumentAuditTableName: !GetAtt FileIngestionService.Outputs.DocumentAuditTableName

  SummarizationService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/summarization/template.yaml
      Parameters:
        FileAssembleFunctionArn: !GetAtt FileAssemblyService.Outputs.FileAssembleFunctionArn
        FileIngestionStateMachineArn: !GetAtt FileIngestionService.Outputs.FileIngestionStateMachineArn

  FileAssemblyService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/file-assembly/template.yaml

  ZipProcessingService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/zip-processing/template.yaml
      Parameters:
        FileProcessingStepFunctionArn: !GetAtt SummarizationService.Outputs.FileProcessingStepFunctionArn

  VectorDBService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/vector-db/template.yaml
      Parameters:
        MilvusHost: !Ref MilvusHost
        MilvusPort: !Ref MilvusPort
        MilvusCollection: !Ref MilvusCollection
        ElasticsearchUrl: !Ref ElasticsearchUrl
        ElasticsearchIndexPrefix: !Ref ElasticsearchIndexPrefix

  RagIngestionService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/rag-ingestion/template.yaml
      Parameters:
        MilvusInsertFunctionArn: !GetAtt VectorDBService.Outputs.MilvusInsertFunctionArn
        MilvusDeleteFunctionArn: !GetAtt VectorDBService.Outputs.MilvusDeleteFunctionArn
        MilvusUpdateFunctionArn: !GetAtt VectorDBService.Outputs.MilvusUpdateFunctionArn
        MilvusCreateCollectionFunctionArn: !GetAtt VectorDBService.Outputs.MilvusCreateCollectionFunctionArn
        MilvusDropCollectionFunctionArn: !GetAtt VectorDBService.Outputs.MilvusDropCollectionFunctionArn
        BucketName: !GetAtt IDPService.Outputs.BucketName
        TextDocPrefix: !GetAtt IDPService.Outputs.TextDocPrefix

  FileIngestionService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/file-ingestion/template.yaml
      Parameters:
        IngestionStateMachineArn: !GetAtt RagIngestionService.Outputs.IngestionStateMachineArn
        IDPBucketName: !GetAtt IDPService.Outputs.BucketName

  RagRetrievalService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/rag-retrieval/template.yaml
      Parameters:
        VectorSearchFunctionArn: !GetAtt VectorDBService.Outputs.VectorSearchFunctionArn

  LLMGatewayService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/llm-gateway/template.yaml
      Parameters:
        BedrockOpenAIEndpoint: !Ref BedrockOpenAIEndpoint
        BedrockSecretName: !Ref BedrockApiKey
        OllamaEndpoint: !Ref OllamaEndpoint
        OllamaDefaultModel: !Ref OllamaDefaultModel
        PromptComplexityThreshold: !Ref PromptComplexityThreshold
        ClassifierModelId: !Ref ClassifierModelId

  KnowledgeBaseService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/knowledge-base/template.yaml
      Parameters:
        IngestionStateMachineArn: !GetAtt RagIngestionService.Outputs.IngestionStateMachineArn
        FileIngestionStateMachineArn: !GetAtt FileIngestionService.Outputs.FileIngestionStateMachineArn
        SummarizeQueueUrl: !GetAtt SummarizationService.Outputs.SummaryQueueUrl


  AnonymizationService:
    Type: AWS::Serverless::Application
    Properties:
      Location: services/anonymization/template.yaml

Outputs:
  FileIngestionStateMachineArn:
    Description: ARN of the file ingestion state machine
    Value: !GetAtt FileIngestionService.Outputs.FileIngestionStateMachineArn
  DetectSensitiveInfoFunctionArn:
    Description: ARN of the sensitive info detection Lambda
    Value: !GetAtt AnonymizationService.Outputs.DetectSensitiveInfoFunctionArn
  TokenizeEntityFunctionArn:
    Description: ARN of the entity tokenization Lambda
    Value: !GetAtt AnonymizationService.Outputs.TokenizeEntityFunctionArn
  TokenTableName:
    Description: Name of the entity token table
    Value: !GetAtt AnonymizationService.Outputs.TokenTableName
  AnonymizeTextFunctionArn:
    Description: ARN of the anonymization Lambda
    Value: !GetAtt AnonymizationService.Outputs.AnonymizeTextFunctionArn
  DocumentAuditTableName:
    Description: Name of the document audit table
    Value: !GetAtt FileIngestionService.Outputs.DocumentAuditTableName

